{"version":3,"sources":["webpack:///./src/templates/project-detail.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","ProjectDetailPage","_ref","project","data","markdownRemark","a","createElement","title","frontmatter","keywords","subtitle","roles","dangerouslySetInnerHTML","__html","html","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","HeaderWrapper","styled","section","withConfig","displayName","componentId","HomeButton","div","SiteNav","nav","NavList","ul","NavButton","li","NavLink","Link","Header","react_default","gatsby_browser_entry","to","activeStyle","fontSize","gatsby_image_default","fixed","file","childImageSharp","_307168625","PageWrapper","ContentWrapper","Footer","footer","Copyright","TextLink","Layout","header","Date","getFullYear","href","repository","_1643453846","node"],"mappings":"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","file":"component---src-templates-project-detail-js-54dd1ee0cc70a02f6a43.js","sourcesContent":["import React from 'react'\n\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst ProjectDetailPage = ({data}) => {\n    const project = data.markdownRemark\n    return (\n        <Layout>\n            <SEO title={project.frontmatter.title} keywords={[`portfolio`, `application`, `react`]} />\n            <div>\n                <h1>{project.frontmatter.title}</h1>\n                <h3>{project.frontmatter.subtitle}</h3>\n                <div>\n                    {project.frontmatter.roles}\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: project.html }} />\n            </div>\n        </Layout>\n    )\n}\n\nexport default ProjectDetailPage\n\nexport const query = graphql `\n    query($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            html\n            frontmatter {\n                title\n                subtitle\n                roles\n            }\n        }\n    }\n`\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n// import PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst HeaderWrapper = styled.section`\n  border-bottom: 1px solid black;\n  padding: 0.54rem 1.0875rem;\n`;\n\nconst HomeButton = styled.div`\n  margin: 0.546rem 0 auto;\n  display: inline-block;\n  float: none;\n  height: 84px;\n`;\n\nconst SiteNav = styled.nav`\n  margin: 0.182rem 0 auto;\n  display: inline-block;\n  float: right;\n`;\n\nconst NavList = styled.ul`\n  list-style: none;\n  margin: 0;\n`;\n\nconst NavButton = styled.li`\n  display: block;\n  margin: 0.2rem 0 0.2rem 0;\n  text-align: right;\n  font-weight: bold;\n`;\n\nconst NavLink = styled(Link)`\n  :hover {\n    :before {\n      color: #FEB30E;\n      content: \"// \";\n    }\n    font-size: 98%;\n  }\n`;\n\nconst Header = () => (\n  <HeaderWrapper>\n    <HomeButton><Link to=\"/\" activeStyle={{\n            fontSize: \"0\",\n          }}>\n      <StaticQuery\n        query={graphql`\n          query {\n            file (relativePath: {eq: \"full-logo@2x.png\"}) {\n              childImageSharp {\n                fixed(width: 140, height: 84) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        `}render={data => <Img fixed={data.file.childImageSharp.fixed} />}\n      />\n    </Link></HomeButton>\n    <SiteNav>\n      <NavList>\n        <NavButton><NavLink to=\"/#about\">About</NavLink></NavButton>\n        <NavButton><NavLink to=\"/#projects\">Work</NavLink></NavButton>\n        <NavButton><NavLink to=\"/#contact\">Contact</NavLink></NavButton>\n      </NavList>\n    </SiteNav>\n  </HeaderWrapper>\n)\n\n// Header.propTypes = {\n//   siteTitle: PropTypes.string,\n// }\n\n// Header.defaultProps = {\n//   siteTitle: ``,\n// }\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport Header from './header'\n\nconst LargeScreenWidth = '992px';\n// const MediumScreenWidth = '767px';\nconst SmallScreenWidth = '575px';\nconst MainContentWidth = '960px';\n\nconst PageWrapper = styled.section`\n  @media screen and (max-width: ${LargeScreenWidth}) {\n    padding: 0 20px 1.45rem;\n  };\n  padding: 0 40px 1.45rem;\n`;\n\nconst ContentWrapper = styled.div`\n  margin: 0 auto;\n  max-width: ${MainContentWidth};\n  @media screen and (max-width: ${SmallScreenWidth}) {\n    padding: 0 0 1.45rem;\n  };\n  padding: 0 1.0875rem 1.45rem;\n`;\n\nconst Footer = styled.footer`\n  border-top: 1px solid black;\n  padding-top: 0.5rem;\n  text-align: center;\n`;\n\nconst Copyright = styled.div`\n  color: #333333;\n`;\n\nconst TextLink = styled.a`\n  color: #FE840E;\n  :hover {\n    color: #FF9D40;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteDataQuery {\n        site {\n          siteMetadata {\n            author\n            repository\n          }\n        }\n      }\n    `}\n    render={data => (\n      <PageWrapper>\n        <Header />\n        <ContentWrapper>\n          {children}\n        </ContentWrapper>\n        <Footer>\n          <Copyright>© {new Date().getFullYear()} Design & Code by {data.site.siteMetadata.author}. <TextLink href={data.site.siteMetadata.repository} >Github Repository</TextLink>.</Copyright>\n        </Footer>\n      </PageWrapper>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}